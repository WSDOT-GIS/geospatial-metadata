{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///C:/Users/jacobsj/Documents/GitHub/geospatial-metadata/node_modules/tslib/tslib.es6.js","webpack:///../geospatial-metadata/dist/csdgm/aliases.js","webpack:///../geospatial-metadata/dist/csdgm/attributeTables.js","webpack:///../geospatial-metadata/dist/dateUtils.js","webpack:///../geospatial-metadata/dist/stringUtils.js","webpack:///./src/index.ts","webpack:///../geospatial-metadata/dist/index.js","webpack:///../geospatial-metadata/dist/csdgm/index.js","webpack:///../geospatial-metadata/dist/geospatialMetadata.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","__extends","__assign","__rest","__decorate","__param","__metadata","__awaiter","__generator","__exportStar","__values","__read","__spread","__await","__asyncGenerator","__asyncDelegator","__asyncValues","__makeTemplateObject","__importStar","__importDefault","extendStatics","b","setPrototypeOf","__proto__","Array","__","this","constructor","assign","arguments","length","apply","e","indexOf","getOwnPropertySymbols","decorators","target","desc","getOwnPropertyDescriptor","Reflect","decorate","paramIndex","decorator","metadataKey","metadataValue","metadata","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","iterator","v","op","TypeError","pop","push","ar","error","concat","asyncIterator","q","a","resume","fulfill","settle","shift","cooked","raw","mod","k","default","accconst","attracc","attraccr","bounding","westbc","eastbc","northbc","southbc","citeinfo","cntinfo","cntorg","cntorgp","cntper","cntpos","cntvoice","cntemail","current","datacred","dataqual","direct","distinfo","distliab","distrib","descript","geoform","idinfo","metainfo","metc","metd","metstdn","metstdv","mettc","native","origin","posacc","horizpa","horizpar","ptcontac","proccont","procdate","procdesc","procstep","proctime","pubdate","ptvctcnt","ptvctinf","sdtsterm","sdtstype","spdoinfo","spdom","supplinf","timeinfo","timeperd","update","useconst","horizsys","spref","mapproj","lambertc","stdparll","longcm","latprjo","feast","fnorth","planci","plance","coordrep","absres","ordres","plandu","geodedic","horizdn","ellips","semiaxis","denflat","tslib_1","formatElementAsTable","rootElement","columns","e_1","_a","e_2","_b","nodeName","Error","edomv","edomvd","edomvds","table","document","createElement","head","createTHead","row","createTBody","appendChild","colElementNames","colName","colText","th","scope","textContent","hasChildNodes","_c","from","childNodes","_d","domain","insertRow","cellNodes","_loop_1","name_1","cell","insertCell","node","find","colElementNames_1","colElementNames_1_1","e_2_1","e_1_1","parseDate","yyyyMMdd","hhmmss","createDate","Date","date","re","match","slice","parts","match_1","match_1_1","undefined","parseInt","isNaN","timeMatch","map","options","year","month","Intl","DateTimeFormat","format","dateInt","parse","toValidClassName","replace","capitalizeFirstCharacter","char","toUpperCase","join","geospatial_metadata_1","dataUrlRe","handleDataUrlLinkClick","currentTarget","href","xml","atob","innerHTML","handleXml","window","history","pushState","scroll","stopPropagation","DOMParser","parseFromString","frag","toHtmlFragment","titleElement","querySelector","title","links","querySelectorAll","link","HTMLAnchorElement","test","onclick","url","location","search","decodeURIComponent","classList","add","fetch","response","remove","text","xmlUrl","className","createRawXmlLink","replaceState","catch","err","console","te","createTextNode","forms","form_1","onsubmit","file","reader","fileInput","files","FileReader","onloadend","progressEvent","readAsText","alert","onpopstate","popStateEvent","state","open","csdgm","aliases_1","aliases","attributeTables_1","dateUtils_1","stringUtils_1","dateNodeNamesRe","microFormats","address","city","postal","country","toTimeNode","dateString","time","output","setAttribute","toISOString","toLocaleDateString","toLocaleString","insertBreaksAtNewlines","Text","paragraphs","split","docFrag","createDocumentFragment","filter","forEach","formatEmail","email","formatPhoneNumber","phoneElement","phone","unseparatedPhone","isFax","formatNumber","numberNode","dataElement","createErrorPreElement","errorElement","pre","outerHTML","xmlSerializer","XMLSerializer","serializeToString","toObject","currentNode","nodeNameToFunction","#comment","comment","eainfo","attrNodes","entityTypeLabel","createCaption","attrNode","def","attrdefs","attrdomv","cntaddr","addrtype","addrClass","propName","span","element","toLowerCase","keywords","e_3","section","heading","keywordNode","rootName","list","keys","_e","_f","keyNode","item","e_3_1","sngdate","sngDateElement","calDateNode","timeElement","cntfax","electronicMailAddress","voice","fax","gco:Decimal","gco:Integer","Enclosure","enclosureNode","dataNode","descriptNode","description","originalFilename","getAttribute","data","uri","Thumbnail","thumbnailNode","src","img","alt","e_4","treatAsTextRE","doc","getTitle","attrList","dl","ignoredAttributes","attributes","attr","dt","dd","createAttributeDL","parentElement","e_4_1"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = {\r\n    accconst: \"Access Constraints\",\r\n    attracc: \"Attribute Accuracy\",\r\n    attraccr: \"Attribute Accuracy Report\",\r\n    bounding: \"Bounding Coordinates\",\r\n    westbc: \"West Bounding Coordinate\",\r\n    eastbc: \"East Bounding Coordinate\",\r\n    northbc: \"North Bounding Coordinate\",\r\n    southbc: \"South Bounding Coordinate\",\r\n    citeinfo: \"Citation Information\",\r\n    cntinfo: \"Contact Info\",\r\n    cntorg: \"Contact Organization\",\r\n    cntorgp: \"Contact Organization Primary\",\r\n    cntper: \"Contact Person\",\r\n    cntpos: \"Contact Position\",\r\n    cntvoice: \"Contact Voice Telephone\",\r\n    cntemail: \"Contact Email\",\r\n    current: \"Currentness Reference\",\r\n    datacred: \"Data Set Credit\",\r\n    dataqual: \"Data Quality Information\",\r\n    direct: \"Direct Spatial Reference Method\",\r\n    distinfo: \"Distribution Information\",\r\n    distliab: \"Distribution Liability\",\r\n    distrib: \"Distributor\",\r\n    descript: \"Description\",\r\n    geoform: \"Geospatial Data Presentation Form\",\r\n    idinfo: \"Identification Information\",\r\n    metainfo: \"Metadata Reference Information\",\r\n    metc: \"Metadata Contact\",\r\n    metd: \"Metadata Date\",\r\n    metstdn: \"Metadata Standard Name\",\r\n    metstdv: \"Metadata Standard Version\",\r\n    mettc: \"Metadata Time Convention\",\r\n    native: \"Native Data Set Environment\",\r\n    origin: \"Originator\",\r\n    posacc: \"Positional Accuracy\",\r\n    horizpa: \"Horizontal Positional Accuracy\",\r\n    horizpar: \"Horizontal Positional Accuracy Report\",\r\n    ptcontac: \"Point of Contact\",\r\n    proccont: \"Process Contact\",\r\n    procdate: \"Process Date\",\r\n    procdesc: \"Process Description\",\r\n    procstep: \"Process Step\",\r\n    proctime: \"Process Time\",\r\n    pubdate: \"Publication Date\",\r\n    ptvctcnt: \"Point and Vector Object Count\",\r\n    ptvctinf: \"Point and Vector Object Information\",\r\n    sdtsterm: \"SDTS Terms Description\",\r\n    sdtstype: \"SDTS Point and Vector Object Type\",\r\n    spdoinfo: \"Spatial Data Organization Information\",\r\n    spdom: \"Spatial Domain\",\r\n    supplinf: \"Supplemental Information\",\r\n    timeinfo: \"Time Period Information\",\r\n    timeperd: \"Time Period\",\r\n    update: \"Maintenance and Update Frequency\",\r\n    useconst: \"Use Constraints\",\r\n    horizsys: \"Horizontal Coordinate System Definition\",\r\n    spref: \"Spatial Reference Information\",\r\n    mapproj: \"Map Projection\",\r\n    lambertc: \"Lambert Conformal Conic\",\r\n    stdparll: \"Standard Parallel\",\r\n    longcm: \"Longitude of Central Meridian\",\r\n    latprjo: \"Latitude of Projection Origin\",\r\n    feast: \"False Easting\",\r\n    fnorth: \"False Northing\",\r\n    planci: \"Planar Coordinate Information\",\r\n    plance: \"Planar Coordinate Encoding Method\",\r\n    coordrep: \"Coordinate Representation\",\r\n    absres: \"Abscissa Resolution\",\r\n    ordres: \"Ordinate Resolution\",\r\n    plandu: \"Planar Distance Unit\",\r\n    geodedic: \"Geodedic Model\",\r\n    horizdn: \"Horizontal Datum Name\",\r\n    ellips: \"Ellipsoid Name\",\r\n    semiaxis: \"Semi-major Axis\",\r\n    denflat: \"Denominator of Flattening Ratio\"\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar edomProps = {\r\n    edomv: \"Value\",\r\n    edomvd: \"Definition\",\r\n    edomvds: \"Definition Source\"\r\n};\r\nvar rdomProps = {\r\n    rdommin: \"Minimum\",\r\n    rdommax: \"Maximum\",\r\n    attrunit: \"Units of Measure\",\r\n    attrmres: \"Measurement Resolution\"\r\n};\r\nvar codesetd = {\r\n    codesetn: \"Name\",\r\n    codesets: \"Source\"\r\n};\r\nfunction formatElementAsTable(rootElement, columns) {\r\n    var e_1, _a, e_2, _b;\r\n    if (!columns) {\r\n        if (rootElement.nodeName === \"attrdomv\") {\r\n            columns = {\r\n                edomv: \"Value\",\r\n                edomvd: \"Definition\",\r\n                edomvds: \"Definition Source\"\r\n            };\r\n        }\r\n        else {\r\n            throw Error(\"Cannot autodetect columns for \" + rootElement.nodeName);\r\n        }\r\n    }\r\n    var table = document.createElement(\"table\");\r\n    var head = table.createTHead();\r\n    var tbody = table.createTBody();\r\n    var row = document.createElement(\"tr\");\r\n    head.appendChild(row);\r\n    var colElementNames = new Array();\r\n    for (var colName in columns) {\r\n        if (columns.hasOwnProperty(colName)) {\r\n            var colText = columns[colName];\r\n            var th = document.createElement(\"th\");\r\n            th.scope = \"col\";\r\n            th.textContent = colText;\r\n            row.appendChild(th);\r\n            colElementNames.push(colName);\r\n        }\r\n    }\r\n    if (rootElement.hasChildNodes()) {\r\n        try {\r\n            for (var _c = tslib_1.__values(Array.from(rootElement.childNodes)), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var domain = _d.value;\r\n                row = table.insertRow(-1);\r\n                var cellNodes = Array.from(domain.childNodes);\r\n                var _loop_1 = function (name_1) {\r\n                    var cell = row.insertCell(-1);\r\n                    var node = cellNodes.find(function (n) { return n.nodeName === name_1; });\r\n                    if (node) {\r\n                        cell.textContent = node.textContent;\r\n                    }\r\n                };\r\n                try {\r\n                    for (var colElementNames_1 = tslib_1.__values(colElementNames), colElementNames_1_1 = colElementNames_1.next(); !colElementNames_1_1.done; colElementNames_1_1 = colElementNames_1.next()) {\r\n                        var name_1 = colElementNames_1_1.value;\r\n                        _loop_1(name_1);\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (colElementNames_1_1 && !colElementNames_1_1.done && (_b = colElementNames_1.return)) _b.call(colElementNames_1);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    }\r\n    return table;\r\n}\r\nexports.formatElementAsTable = formatElementAsTable;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar dateNodeNamesRe = /(?:(?:(?:pub)|(?:cal)|(?:proc))date)|(?:metd)/;\r\n/**\r\n * Parses a yyyyMMdd date string into a date object.\r\n * @param {string} yyyyMMdd - Date string - Parts can optionally be separated by dashes or slashes.\r\n * @param {string} [hhmmss] - Time string\r\n * @returns {Date} Returns a date object equivalent to the input date and time strings.\r\n * @throws {Error} Throws an error if yyyyMMdd is in an unexpected format.\r\n */\r\nfunction parseDate(yyyyMMdd, hhmmss) {\r\n    var e_1, _a;\r\n    /**\r\n     * Calls the date constructor with a variable number of parameters.\r\n     */\r\n    function createDate(a, b, c, d, e, f) {\r\n        if (c === void 0) { c = 0; }\r\n        if (d === void 0) { d = 0; }\r\n        if (e === void 0) { e = 0; }\r\n        if (f === void 0) { f = 0; }\r\n        return new Date(a, b, c, d, e, f);\r\n    }\r\n    var re = /^(\\d{4})(?:[-\\/]?([0-1]\\d)(?:[-\\/]?([0-3]\\d)?)?)?$/i;\r\n    var match = yyyyMMdd.match(re);\r\n    var date;\r\n    if (match) {\r\n        // Remove the first element, which is the entire matched part of the string.\r\n        // We only want the digit groups.\r\n        match = match.slice(1);\r\n        // Create an array of the integers in the date string.\r\n        var parts = [];\r\n        try {\r\n            // Loop through all of the matched parts, and add to number array,\r\n            // stopping when a non-numerical string is found.\r\n            for (var match_1 = tslib_1.__values(match), match_1_1 = match_1.next(); !match_1_1.done; match_1_1 = match_1.next()) {\r\n                var s = match_1_1.value;\r\n                var n = void 0;\r\n                if (s !== undefined && s.length) {\r\n                    n = parseInt(s, 10);\r\n                    if (!isNaN(n)) {\r\n                        parts.push(n);\r\n                    }\r\n                    else {\r\n                        n = undefined;\r\n                    }\r\n                }\r\n                if (n === undefined) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (match_1_1 && !match_1_1.done && (_a = match_1.return)) _a.call(match_1);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        // Parse the time from string if provided and\r\n        // if the date value represents a specific day\r\n        // of the year (as opposed to just a year or a month.)\r\n        if (hhmmss && parts.length > 3) {\r\n            // Match each occurance of a number\r\n            re = /\\d{2}/g;\r\n            var timeMatch = hhmmss.match(re);\r\n            if (timeMatch) {\r\n                parts = parts.concat(timeMatch.map(function (s) {\r\n                    return parseInt(s, 10);\r\n                }));\r\n            }\r\n        }\r\n        // Stupidly, JavaScript Date months (and ONLY months) are zero based.\r\n        // Decrease parsed month value by one.\r\n        if (parts.length >= 2) {\r\n            parts[1] = parts[1] - 1;\r\n        }\r\n        if (parts.length >= 3) {\r\n            date = createDate.apply(null, parts);\r\n            // date = new Date(...parts);\r\n        }\r\n        else {\r\n            date = createDate.apply(this, parts);\r\n            var options = parts.length === 1\r\n                ? {\r\n                    year: \"numeric\",\r\n                    month: \"long\"\r\n                }\r\n                : {\r\n                    year: \"numeric\"\r\n                };\r\n            var fmt = new Intl.DateTimeFormat(undefined, options);\r\n            date = fmt.format(date);\r\n        }\r\n    }\r\n    else {\r\n        // If an unexpected date format is encountered,\r\n        // try parsing using JavaScript built-in method.\r\n        var dateInt = Date.parse(yyyyMMdd);\r\n        if (!isNaN(dateInt)) {\r\n            date = new Date(dateInt);\r\n        }\r\n        else {\r\n            throw new Error(\"Unexpected date format\");\r\n        }\r\n    }\r\n    return date;\r\n}\r\nexports.parseDate = parseDate;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Converts a string to a valid class name.\r\n * @param {string} s - A string.\r\n * @returns {string} valid class name string\r\n */\r\nfunction toValidClassName(s) {\r\n    if (s) {\r\n        s = s.replace(/[^\\-a-z0-9]+/i, \"-\");\r\n    }\r\n    return s;\r\n}\r\nexports.toValidClassName = toValidClassName;\r\n/**\r\n * Capitalizes the first character in a string.\r\n * @param {string} s - A string\r\n * @returns {string} - A copy of the input string, but with the first character capitalized.\r\n */\r\nfunction capitalizeFirstCharacter(s) {\r\n    var output = Array.from(s, function (char, i) {\r\n        if (i === 0) {\r\n            return char.toUpperCase();\r\n        }\r\n        else {\r\n            return char;\r\n        }\r\n    });\r\n    return output.join(\"\");\r\n}\r\nexports.capitalizeFirstCharacter = capitalizeFirstCharacter;\r\n","import { toHtmlFragment, toObject } from \"@wsdot/geospatial-metadata\";\r\nconst dataUrlRe = /^data\\:([^;,]+)?(?:;(base64))?,([A-Za-z0-9+\\/]+)/i; // [whole, MIME-type?, base64?, content]\r\n\r\n/**\r\n * Reset the page content to the data from the data URI link.\r\n * @param {Event} e - Link click event\r\n */\r\nfunction handleDataUrlLinkClick(e: Event) {\r\n  const a = (e.target || e.currentTarget) as HTMLAnchorElement;\r\n  const match = a.href.match(dataUrlRe);\r\n  if (match && match.length > 3) {\r\n    const xml = atob(match[3]);\r\n    document.body.innerHTML = \"\";\r\n    handleXml(xml);\r\n    const stateTitle = \"Embedded HTML\";\r\n    try {\r\n      window.history.pushState(xml, stateTitle, `#${a.href}`);\r\n    } catch (e) {\r\n      window.history.pushState(xml, stateTitle, \"#embedded\");\r\n    }\r\n    window.scroll(0, 0); // scroll back to the top of the page.\r\n    // Stop the navigation.\r\n    e.stopPropagation();\r\n  }\r\n}\r\n\r\nfunction handleXml(xml: string | Document) {\r\n  if (typeof xml === \"string\") {\r\n    xml = (() => {\r\n      const parser = new DOMParser();\r\n      return parser.parseFromString(xml, \"text/xml\");\r\n    })();\r\n  }\r\n  const frag = toHtmlFragment(xml);\r\n  document.body.appendChild(frag);\r\n  const titleElement = document.body.querySelector(\"header > h1\");\r\n  const title = titleElement ? titleElement.textContent : null;\r\n\r\n  document.title = title || \"\";\r\n\r\n  const links = document.querySelectorAll(\"a[href]\"); // document.querySelectorAll(\"a[href^='data:text/xml;base64']\"); // doesn't work in IE 11, always returns 0 nodes.\r\n\r\n  // Setup special click event handler for data URI links.\r\n  Array.from(links, link => {\r\n    if (link instanceof HTMLAnchorElement && dataUrlRe.test(link.href)) {\r\n      link.onclick = handleDataUrlLinkClick;\r\n    }\r\n  });\r\n}\r\n\r\nfunction createRawXmlLink(xmlUrl: string) {\r\n  const className = \"raw-metadata-link\";\r\n  const p = document.createElement(\"p\");\r\n  p.classList.add(className);\r\n  const a = document.createElement(\"a\");\r\n  a.classList.add(`${className}__anchor`);\r\n  a.href = xmlUrl;\r\n  a.textContent = \"view metadata XML\";\r\n  a.target = \"wsdot-metadata-raw\";\r\n  p.appendChild(a);\r\n  return p;\r\n}\r\n\r\nlet url: string | RegExpMatchArray | null = null;\r\n\r\nif (location.search) {\r\n  url = location.search.match(/ur[li]=([^&]+)/i); // location.search.replace(/^\\?/, \"\");\r\n}\r\n\r\nif (url) {\r\n  url = decodeURIComponent(url[1]);\r\n\r\n  document.body.classList.add(\"loading\");\r\n\r\n  try {\r\n  fetch(url)\r\n    .then((response: Response) => {\r\n      document.body.classList.remove(\"loading\");\r\n      return response.text();\r\n    })\r\n    .then(text => {\r\n      document.body.innerHTML = \"\";\r\n      const link = createRawXmlLink(url as string);\r\n      document.body.appendChild(link);\r\n      document.body.classList.add(\"loaded\");\r\n      history.replaceState(text, \"\", location.href);\r\n      const parser = new DOMParser();\r\n      const xml = parser.parseFromString(text, \"text/xml\");\r\n      handleXml(xml);\r\n    })\r\n    .catch(err => {\r\n      // tslint:disable-next-line:no-console\r\n      console.error(`An error occured fetchcing ${url}.`, err);\r\n    });\r\n  } catch (error) {\r\n    document.body.innerHTML = \"\";\r\n    const p = document.createElement(\"p\");\r\n    const te = document.createTextNode(\"Unfortunately, this browser does not support features required to format the metadata. \");\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.textContent = \"Go directly to metadata\";\r\n    p.appendChild(te);\r\n    p.appendChild(a);\r\n    document.body.appendChild(p);\r\n  }\r\n}\r\n\r\n/**\r\n * Opens a local XML file and formats it into HTML.\r\n * @param {File} file\r\n */\r\nfunction openFile(file: File) {\r\n  const reader = new FileReader();\r\n  reader.onloadend = function(progressEvent) {\r\n    const xml = this.result;\r\n    if (typeof xml === \"string\") {\r\n      document.body.innerHTML = \"\";\r\n      document.body.classList.add(\"loaded\");\r\n      handleXml(xml);\r\n      history.pushState(xml, \"\", \"#localfile\");\r\n    }\r\n  };\r\n  reader.readAsText(file);\r\n}\r\n\r\nif (document.forms.length > 0) {\r\n  const form: any = document.forms[0];\r\n\r\n  form.onsubmit = () => {\r\n    const fileInput = form.querySelector(\"#fileInput\");\r\n    if (!form.url.value && !fileInput.value) {\r\n      alert(\"No XML file specified.\");\r\n      return false;\r\n    } else if (fileInput.files.length > 0) {\r\n      openFile(fileInput.files[0]);\r\n      return false;\r\n    }\r\n    // If none of the above conditions are true,\r\n    // The page will reload with the URL parameter.\r\n  };\r\n}\r\n\r\n/**\r\n * When the user clicks the back or next buttons on their browser, show the XML stored in the state.\r\n * @param {PopStateEvent} popStateEvent\r\n * @param {Object} popStateEvent.state\r\n */\r\nwindow.onpopstate = popStateEvent => {\r\n  if (popStateEvent.state) {\r\n    document.body.innerHTML = \"\";\r\n    handleXml(popStateEvent.state);\r\n    window.scroll(0, 0); // scroll back to the top of the page.\r\n  } else {\r\n    // Reload the page if the state has no XML.\r\n    window.open(window.location.href, \"_self\");\r\n  }\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar csdgm = tslib_1.__importStar(require(\"./csdgm/index\"));\r\nexports.csdgm = csdgm;\r\ntslib_1.__exportStar(require(\"./dateUtils\"), exports);\r\ntslib_1.__exportStar(require(\"./geospatialMetadata\"), exports);\r\ntslib_1.__exportStar(require(\"./stringUtils\"), exports);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar aliases_1 = tslib_1.__importDefault(require(\"./aliases\"));\r\nexports.aliases = aliases_1.default;\r\ntslib_1.__exportStar(require(\"./attributeTables\"), exports);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar aliases_1 = tslib_1.__importDefault(require(\"./csdgm/aliases\"));\r\nvar attributeTables_1 = require(\"./csdgm/attributeTables\");\r\nvar dateUtils_1 = require(\"./dateUtils\");\r\nvar stringUtils_1 = require(\"./stringUtils\");\r\n/**\r\n * XMLDocument\r\n * @external XMLDocument\r\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLDocument XMLDocument}\r\n */\r\nvar dateNodeNamesRe = /(?:(?:(?:pub)|(?:cal)|(?:proc))date)|(?:metd)/;\r\nvar microFormats = {\r\n    address: \"p-street-address\",\r\n    city: \"p-locality\",\r\n    state: \"p-region\",\r\n    postal: \"p-postal-code\",\r\n    country: \"p-country-name\",\r\n    cntpos: \"p-job-title\",\r\n    cntorg: \"p-org\",\r\n    cntvoice: [\"p-tel\", \"p-tel-voice\", \"p-tel-work\"],\r\n    cntinfo: \"h-card\",\r\n    cntemail: \"u-email\"\r\n};\r\n/**\r\n * Converts a Date into a <time> element\r\n * @param {string} dateString - A string representation of a date.\r\n * @param {string} [time] - An optional time string.\r\n * @return {HTMLTimeElement|HTMLUnknownElement} - If the browser supports it, an HTMLTimeElement will be returned. Otherwise an HTMLUnknownElement will be returned.\r\n * @throws {TypeError} Thrown if dateString is null, empty, undefined, or otherwise inproperly formatted.\r\n */\r\nfunction toTimeNode(dateString, time) {\r\n    if (!dateString) {\r\n        throw new TypeError(\"No date provided\");\r\n    }\r\n    var output = document.createElement(\"time\");\r\n    if (!(time && !/Unknown/i.test(time))) {\r\n        var date = dateUtils_1.parseDate(dateString);\r\n        if (date instanceof Date) {\r\n            output.setAttribute(\"datetime\", date.toISOString().replace(/T.+$/, \"\"));\r\n            output.textContent = date.toLocaleDateString();\r\n        }\r\n    }\r\n    else {\r\n        var date = dateUtils_1.parseDate(dateString, time);\r\n        if (date instanceof Date) {\r\n            output.setAttribute(\"datetime\", date.toISOString());\r\n            output.textContent = date.toLocaleString();\r\n        }\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Converts an XML element into an object.\r\n * @param {Element} node - XML Element\r\n * @returns {Object} - An object representation of the XML element.\r\n */\r\nfunction toObject(node) {\r\n    var e_1, _a;\r\n    if (node.childNodes && node.childNodes.length > 0) {\r\n        var output = {};\r\n        try {\r\n            for (var _b = tslib_1.__values(Array.from(node.childNodes)), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var currentNode = _c.value;\r\n                output[currentNode.nodeName] =\r\n                    currentNode instanceof Text\r\n                        ? currentNode.textContent\r\n                        : toObject(currentNode);\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        return output;\r\n    }\r\n    return node.textContent;\r\n}\r\nexports.toObject = toObject;\r\n/**\r\n * Formats a single date element.\r\n * @param {Element} sngDateElement - A metadata element containing caldate and time elements.\r\n * @returns {HTMLElement} Returns an HTML element.\r\n */\r\nfunction formatSngdate(sngDateElement) {\r\n    var calDateNode = sngDateElement.querySelector(\"caldate\");\r\n    if (calDateNode) {\r\n        var dateString = calDateNode.textContent;\r\n        if (dateString) {\r\n            var timeElement = sngDateElement.querySelector(\"time\");\r\n            var time = void 0;\r\n            if (timeElement) {\r\n                time =\r\n                    timeElement && timeElement.textContent\r\n                        ? timeElement.textContent\r\n                        : undefined;\r\n            }\r\n            return toTimeNode(dateString, time);\r\n        }\r\n    }\r\n    return createErrorPreElement(sngDateElement);\r\n}\r\n/**\r\n * Formats the Contact Address (cntattr) node.\r\n * @param {XMLDocument|Element} node - A <cntattr> XML node\r\n * @returns {HTMLDocumentFragment} - Returns an HTML document fragment.\r\n * @throws {Error} Throws an error if node is not a cntaddr node.\r\n */\r\nfunction formatAddress(node) {\r\n    if (node.nodeName !== \"cntaddr\") {\r\n        throw new Error(\"Expected cntaddr node\");\r\n    }\r\n    // TODO: use different microformat for PO BOX vs. street address.\r\n    var output = document.createElement(\"section\");\r\n    var addrtype = node.querySelector(\"addrtype\");\r\n    addrtype = addrtype.textContent || \"\";\r\n    var addrClass = stringUtils_1.toValidClassName(addrtype);\r\n    var label = document.createElement(\"h1\");\r\n    if (addrtype) {\r\n        label.textContent = addrtype;\r\n        output.appendChild(label);\r\n    }\r\n    var p = document.createElement(\"p\");\r\n    p.setAttribute(\"class\", \"h-addr address\");\r\n    if (addrClass) {\r\n        p.classList.add(addrClass);\r\n        p.classList.add(\"h-addr-\" + addrClass);\r\n    }\r\n    [\"address\", \"city\", \"state\", \"postal\", \"country\"].forEach(function (propName) {\r\n        var element = node.querySelector(propName);\r\n        var span;\r\n        if (element) {\r\n            span = document.createElement(\"span\");\r\n            span.classList.add(propName);\r\n            span.classList.add(microFormats[propName]);\r\n            span.textContent = element.textContent;\r\n            p.appendChild(span);\r\n        }\r\n    });\r\n    var country = node.querySelector(\"country\");\r\n    if (country) {\r\n        country = country.textContent;\r\n        p.classList.add([\"country\", country].join(\"-\").toLowerCase());\r\n    }\r\n    output.appendChild(p);\r\n    return output;\r\n}\r\n/**\r\n * Creates a table of attributes\r\n * @param {XMLDocument|Element} node - An <eainfo> XML node.\r\n * @returns {HTMLTableElement} A table of the contents of the attributes.\r\n */\r\nfunction createAttributesTable(node) {\r\n    var attrNodes = node.querySelectorAll(\"attr\");\r\n    var table = document.createElement(\"table\");\r\n    table.classList.add(\"attributes-table\");\r\n    var entityTypeLabel = node.querySelector(\"detailed > enttyp > enttypl\");\r\n    if (entityTypeLabel) {\r\n        table.createCaption().textContent = \"Attributes for \" + entityTypeLabel;\r\n    }\r\n    var head = table.createTHead();\r\n    head.innerHTML =\r\n        \"<tr><th>Label</th><th>Definition</th><th>Definition Source</th><th>Domain Values</th></tr>\";\r\n    var attrArray = Array.from(attrNodes, function (attrNode) {\r\n        var row = table.insertRow(-1);\r\n        var label = attrNode.querySelector(\"attrlabl\");\r\n        var def = attrNode.querySelector(\"attrdef\");\r\n        var attrdefs = attrNode.querySelector(\"attrdefs\");\r\n        var attrdomv = attrNode.querySelector(\"attrdomv\");\r\n        var cell = row.insertCell(-1);\r\n        if (label && label.textContent) {\r\n            cell.textContent = label.textContent || \"\";\r\n        }\r\n        cell = row.insertCell(-1);\r\n        if (def && def.textContent) {\r\n            cell.textContent = def.textContent || \"\";\r\n        }\r\n        cell = row.insertCell(-1);\r\n        if (attrdefs) {\r\n            cell.textContent = attrdefs.textContent;\r\n        }\r\n        cell = row.insertCell(-1);\r\n        if (attrdomv) {\r\n            cell.appendChild(attributeTables_1.formatElementAsTable(attrdomv));\r\n        }\r\n    });\r\n    return table;\r\n}\r\n/**\r\n * Converts a <keywords> XML element into a section containing lists.\r\n * @param {XMLDocument|Element} node - XML node: Either a <keywords> element or its parent.\r\n * @returns {HTMLSectionElement} Returns a <section> containing keyword lists.\r\n */\r\nfunction createKeywordsLists(node) {\r\n    var e_2, _a, e_3, _b;\r\n    if (node.nodeName !== \"keywords\") {\r\n        node = node.querySelector(\"keywords\");\r\n    }\r\n    var section = document.createElement(\"section\");\r\n    section.classList.add(\"keywords\");\r\n    var heading = document.createElement(\"h1\");\r\n    heading.textContent = \"Keywords\";\r\n    section.appendChild(heading);\r\n    try {\r\n        for (var _c = tslib_1.__values(Array.from(node.childNodes)), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n            var keywordNode = _d.value;\r\n            if (!(keywordNode.name instanceof Text)) {\r\n                var frag = document.createDocumentFragment();\r\n                var rootName = keywordNode.nodeName;\r\n                heading = document.createElement(\"h2\");\r\n                // TODO: Keyword Thesaurus // const keyword_thesaurus = keywordNode.querySelector(`${rootName}kt`);\r\n                heading.textContent = rootName;\r\n                frag.appendChild(heading);\r\n                var list = document.createElement(\"ul\");\r\n                var keys = keywordNode.querySelectorAll(rootName + \"key\");\r\n                try {\r\n                    for (var _e = tslib_1.__values(Array.from(keys)), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var keyNode = _f.value;\r\n                        var item = document.createElement(\"li\");\r\n                        item.textContent = keyNode.textContent;\r\n                        list.appendChild(item);\r\n                    }\r\n                }\r\n                catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_3) throw e_3.error; }\r\n                }\r\n                frag.appendChild(list);\r\n                section.appendChild(frag);\r\n            }\r\n        }\r\n    }\r\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n    finally {\r\n        try {\r\n            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n        }\r\n        finally { if (e_2) throw e_2.error; }\r\n    }\r\n    return section;\r\n}\r\n/**\r\n * Creates a document fragment from at text element, inserting <br> elements where there were newlines.\r\n * @param {string|Text} text - Either an XML text node or a string.\r\n * @returns {Text | DocumentFragment} - An HTML document fragment or a Text node.\r\n */\r\nfunction insertBreaksAtNewlines(text) {\r\n    var newLineRe = /[\\r\\n]+/g;\r\n    var textContent = text instanceof Text ? text.textContent || \"\" : text;\r\n    var paragraphs = textContent.split(newLineRe);\r\n    var docFrag = document.createDocumentFragment();\r\n    if (paragraphs.length === 1) {\r\n        return document.createTextNode(textContent);\r\n    }\r\n    else {\r\n        // Filter out empty strings and strings with only space characters.\r\n        paragraphs.filter(function (s) { return s && s.length && /\\S/.test(s); }).forEach(function (s) {\r\n            var p = document.createElement(\"p\");\r\n            p.textContent = s;\r\n            docFrag.appendChild(p);\r\n        });\r\n    }\r\n    return docFrag;\r\n}\r\n/**\r\n * Converts and email address into a link to an email address (with u-email microdata class).\r\n * @param {Node|string} email - An email address or an XML node containing an email address as its text content.\r\n * @returns {HTMLAnchorElement} An anchor element linking to an email address.\r\n */\r\nfunction formatEmail(email) {\r\n    var a = document.createElement(\"a\");\r\n    email = email.textContent || email;\r\n    a.href = \"mailto:\" + email;\r\n    a.textContent = email;\r\n    a.classList.add(\"u-email\");\r\n    return a;\r\n}\r\n/**\r\n * Converts a phone number string into an <a href=\"tel:...\"> link.\r\n * @param {Element} phoneElement - A phone number.\r\n * @returns {HTMLAnchorElement} An anchor element with a link to the input phone number. Microdata class \"p-tel\" is also added.\r\n */\r\nfunction formatPhoneNumber(phoneElement) {\r\n    var re = /\\d+/g;\r\n    var phone = phoneElement.textContent;\r\n    if (!phone) {\r\n        throw TypeError(\"Element does not contain text content.\");\r\n    }\r\n    var parts = phone.match(re);\r\n    if (!parts) {\r\n        throw Error(\"Expected a phone number, instead got \\\"\" + phone + \"\\\".\");\r\n    }\r\n    var unseparatedPhone = parts.join(\"\");\r\n    var isFax = /fax/i.test(phoneElement.nodeName);\r\n    var url = isFax ? \"fax:\" : \"tel:\";\r\n    if (unseparatedPhone.length === 10) {\r\n        url += [\"+1-\", phone].join(\"\");\r\n    }\r\n    else {\r\n        url += phone;\r\n    }\r\n    var a = document.createElement(\"a\");\r\n    a.textContent = phone;\r\n    a.href = url;\r\n    a.classList.add(isFax ? \"p-tel-fax\" : \"p-tel\");\r\n    return a;\r\n}\r\nfunction formatNumber(numberNode) {\r\n    var dataElement = document.createElement(\"data\");\r\n    dataElement.classList.add(numberNode.name);\r\n    dataElement.textContent = numberNode.textContent;\r\n    return dataElement;\r\n}\r\n/**\r\n * Creates a list of an XML node's attributes. Attributes with names starting with \"xmlns\", and \"codeList...\" and \"codeSpace\" will be omitted.\r\n * @param {Node} node - XML node\r\n * @returns {HTMLDListElement} List of attributes. If there were no attributes, null will be returned.\r\n */\r\nfunction createAttributeDL(node) {\r\n    var dl = null;\r\n    var ignoredAttributes = /(^xmlns(?:\\:\\w+)?)|(codeList(Value)?)|(codeSpace)/;\r\n    if (node.attributes && node.attributes.length > 0) {\r\n        dl = document.createElement(\"dl\");\r\n        for (var i = 0; i < node.attributes.length; i++) {\r\n            var attr = node.attributes.item(i);\r\n            if (attr.name.match(ignoredAttributes)) {\r\n                continue;\r\n            }\r\n            var dt = document.createElement(\"dt\");\r\n            dt.textContent = attr.name;\r\n            dl.appendChild(dt);\r\n            var dd = document.createElement(\"dd\");\r\n            dd.textContent = attr.value;\r\n            dl.appendChild(dd);\r\n        }\r\n        // Nullify the output list if it has no children.\r\n        if (dl.childNodes.length <= 0) {\r\n            dl = null;\r\n        }\r\n    }\r\n    return dl;\r\n}\r\n/**\r\n * Gets the metadata tile from an XML geospatial metadata document.\r\n * @param {XMLDocument} doc - XML document\r\n * @returns {string} Returns the title. If title cannot be found, \"Untitled\" is returned.\r\n */\r\nfunction getTitle(doc) {\r\n    var title = doc.querySelector(\"title,resTitle\");\r\n    if (title && title.textContent) {\r\n        return title.textContent;\r\n    }\r\n    return \"Untitled\";\r\n}\r\n/**\r\n * Converts the base-64 encoded source metadata XML document from an ESRI format metadata XML document\r\n * and converts it into a data URI link.\r\n * @param {Element} enclosureNode - A Binary/Enclosure element.\r\n * @returns {HTMLAnchorElement} - An HTML link pointing to the data URI.\r\n */\r\nfunction convertEnclosureToDataUriLink(enclosureNode) {\r\n    var dataNode = enclosureNode.querySelector(\"Data\");\r\n    if (!dataNode) {\r\n        throw new Error(\"Data node not found\");\r\n    }\r\n    var descriptNode = enclosureNode.querySelector(\"Descript\");\r\n    if (!descriptNode) {\r\n        throw new Error('\"Descript\" node not found');\r\n    }\r\n    var description = descriptNode.textContent;\r\n    var propertyType = dataNode.getAttribute(\"EsriPropertyType\"); // should be \"Base64\";\r\n    var metadataSchema = dataNode.getAttribute(\"SourceMetadataSchema\"); // e.g., \"fgdc\";\r\n    // let sourceMetadata = dataNode.getAttribute(\"SourceMetadata\");\r\n    var originalFilename = dataNode.getAttribute(\"OriginalFileName\");\r\n    // sourceMetadata = /^yes$/i.test(sourceMetadata);\r\n    var data = dataNode.textContent;\r\n    if (data) {\r\n        // Remove newline characters.\r\n        data = data.replace(/[\\r\\n]/g, \"\");\r\n    }\r\n    // Create data URI (Assuming XML for now. Metadata may possibly have other enclosures besides source metadata XML document.)\r\n    var uri = \"data:text/xml;base64,\" + data;\r\n    // Create the link.\r\n    var a = document.createElement(\"a\");\r\n    a.href = uri;\r\n    a.textContent = description;\r\n    if (originalFilename) {\r\n        a.textContent += \" (\" + originalFilename + \")\";\r\n    }\r\n    a.target = \"_blank\";\r\n    return a;\r\n}\r\n/**\r\n * Converts a thumbnail image to an <img>.\r\n * @param {Element} thumbnailNode\r\n * @returns {HTMLImageElement}\r\n */\r\nfunction convertThumbnailToImage(thumbnailNode) {\r\n    var dataElement = thumbnailNode.querySelector(\"Data\");\r\n    if (!dataElement) {\r\n        throw new TypeError(\"'Data' element not found\");\r\n    }\r\n    var propertyType = dataElement.getAttribute(\"EsriPropertyType\");\r\n    var data = dataElement.textContent;\r\n    if (!data) {\r\n        throw new TypeError(\"No data present in Data element.\");\r\n    }\r\n    data = data.replace(/[\\r\\n]/g, \"\");\r\n    var src = \"data:image/png;base64,\" + data;\r\n    var img = document.createElement(\"img\");\r\n    img.src = src;\r\n    img.alt = \"thumbnail\";\r\n    img.classList.add(\"thumbnail\");\r\n    return img;\r\n}\r\n/**\r\n * Creates a <pre class=\"error\"> element with the contents of an XML node.\r\n * @param {Element} errorElement - An XML element that is to be displayed in a <pre> node.\r\n * @returns {HTMLPreElement} - A <pre> containing the XML markup of the input element.\r\n */\r\nfunction createErrorPreElement(errorElement) {\r\n    var pre = document.createElement(\"pre\");\r\n    pre.classList.add(\"error\");\r\n    if (errorElement.outerHTML) {\r\n        pre.textContent = errorElement.outerHTML;\r\n    }\r\n    else {\r\n        var xmlSerializer = new XMLSerializer();\r\n        pre.textContent = xmlSerializer.serializeToString(errorElement);\r\n    }\r\n    return pre;\r\n}\r\n/**\r\n * Converts an XML comment into a paragraph element.\r\n * @param {Comment} comment - an XML commenet\r\n * @returns {HTMLParagraphElement} A paragraph containing the text of the comment.\r\n */\r\nfunction commentToParagraph(comment) {\r\n    var p = document.createElement(\"p\");\r\n    p.classList.add(\"comment\");\r\n    p.textContent = comment.textContent;\r\n    return p;\r\n}\r\n// Create a mapping of node names to formatting functions.\r\nvar nodeNameToFunction = {\r\n    \"#comment\": commentToParagraph,\r\n    eainfo: createAttributesTable,\r\n    cntaddr: formatAddress,\r\n    keywords: createKeywordsLists,\r\n    sngdate: formatSngdate,\r\n    cntemail: formatEmail,\r\n    cntvoice: formatPhoneNumber,\r\n    cntfax: formatPhoneNumber,\r\n    electronicMailAddress: formatEmail,\r\n    voice: formatPhoneNumber,\r\n    fax: formatPhoneNumber,\r\n    \"gco:Decimal\": formatNumber,\r\n    \"gco:Integer\": formatNumber,\r\n    Enclosure: convertEnclosureToDataUriLink,\r\n    Thumbnail: convertThumbnailToImage\r\n};\r\n/**\r\n * Converts an XML document or node into an HTML document fragment.\r\n * @param {XMLDocument|Element} node - Either an XML document or one of its children.\r\n * @returns {DocumentFragment} An HTML document fragment\r\n */\r\nfunction toHtmlFragment(node) {\r\n    var e_4, _a;\r\n    var heading;\r\n    var treatAsTextRE = /(CharacterString)|(LanguageCode)|(((CI)|(MD))_\\w+Code)/;\r\n    // Add page title if this is the root element.\r\n    if (node.nodeName === \"#document\") {\r\n        var title = getTitle(node);\r\n        heading = document.createElement(\"header\");\r\n        heading.innerHTML = \"<h1>\" + title + \"</h1>\";\r\n        document.body.appendChild(heading);\r\n    }\r\n    // if (!node || !node.attributes || !node.childNodes) {\r\n    //    return;\r\n    // }\r\n    var output = document.createDocumentFragment();\r\n    var attrList = createAttributeDL(node);\r\n    if (attrList) {\r\n        output.appendChild(attrList);\r\n    }\r\n    if (node.childNodes && node.childNodes.length > 0) {\r\n        try {\r\n            for (var _b = tslib_1.__values(Array.from(node.childNodes)), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var currentNode = _c.value;\r\n                if (!currentNode) {\r\n                    continue;\r\n                }\r\n                if (nodeNameToFunction.hasOwnProperty(currentNode.nodeName)) {\r\n                    try {\r\n                        output.appendChild(nodeNameToFunction[currentNode.nodeName](currentNode));\r\n                    }\r\n                    catch (err) {\r\n                        output.appendChild(createErrorPreElement(currentNode));\r\n                    }\r\n                }\r\n                else if (currentNode instanceof Text ||\r\n                    currentNode.nodeName.match(treatAsTextRE)) {\r\n                    output.appendChild(insertBreaksAtNewlines(currentNode.textContent || \"\"));\r\n                }\r\n                else {\r\n                    // Create the section header if this is not the root element.\r\n                    if (currentNode.parentElement !== null) {\r\n                        // In IE, the parentElement property will be undefined.\r\n                        heading = document.createElement(\"h1\");\r\n                        heading.textContent =\r\n                            aliases_1.default[currentNode.nodeName] ||\r\n                                stringUtils_1.capitalizeFirstCharacter(currentNode.nodeName);\r\n                    }\r\n                    else {\r\n                        heading = null;\r\n                    }\r\n                    var section = document.createElement(\"section\");\r\n                    section.classList.add(currentNode.nodeName);\r\n                    if (heading) {\r\n                        section.appendChild(heading);\r\n                    }\r\n                    // Handle date nodes\r\n                    if (dateNodeNamesRe.test(currentNode.nodeName)) {\r\n                        try {\r\n                            section.appendChild(toTimeNode(currentNode.textContent));\r\n                        }\r\n                        catch (e) {\r\n                            section.appendChild(createErrorPreElement(currentNode));\r\n                        }\r\n                    }\r\n                    else if (currentNode) {\r\n                        var frag = toHtmlFragment(currentNode);\r\n                        if (frag) {\r\n                            section.appendChild(frag);\r\n                        }\r\n                    }\r\n                    output.appendChild(section);\r\n                }\r\n            }\r\n        }\r\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_4) throw e_4.error; }\r\n        }\r\n    }\r\n    else if (node && node.textContent) {\r\n        output.appendChild(document.createTextNode(node.textContent));\r\n    }\r\n    return output;\r\n}\r\nexports.toHtmlFragment = toHtmlFragment;\r\n"],"sourceRoot":""}